name: "ü§ñ Dependabot Config"

on:
  workflow_call:
    inputs:
      output_file:
        type: string
        description: "The file to generate (default: .github/dependabot.yaml)"
        required: false
        default: ".github/dependabot.yaml"
      schedule:
        type: string
        description: "The schedule to use (default: weekly)"
        required: false
        default: "weekly"
      base_branch:
        type: string
        description: "The base branch to create the pull request against (default: main)"
        required: false
        default: "main"

permissions:
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-generate-dependabot-config
  cancel-in-progress: true

jobs:
  generate-dependabot-config:
    runs-on: ubuntu-latest
    container: ghcr.io/maandr/action-runners/gitops:1
    defaults:
      run:
        shell: bash
    steps:
      - name: "‚è¨ Checkout Git Repository"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: "üìù Generate dependabot config"
        run: |
          i=0
          
          echo "# THIS FILE IS GENERATED BY A GITHUB WORKFLOW" > ${{ inputs.output_file }}
          echo "version: 2" >> ${{ inputs.output_file }}
          yq -i "
            .updates[$i].package-ecosystem = \"github-actions\" |
            .updates[$i].directory = \"/\" |
            .updates[$i].schedule.interval = \"${{ inputs.schedule }}\"
          " ${{ inputs.output_file }}
          i=$((i + 1))
          
          # GitHub Actions
          for file in $(find . -type f \( -name "action.yaml" -o -name "action.yml" \)); do
            dir=$(dirname "$file")
            yq -i "
              .updates[$i].package-ecosystem = \"github-actions\" |
              .updates[$i].directory = \"$dir\" |
              .updates[$i].schedule.interval = \"${{ inputs.schedule }}\"
            " ${{ inputs.output_file }}
            i=$((i + 1))
          done

          # Dockerfiles
          for file in $(find . -type f -name "Dockerfile"); do
            dir=$(dirname "$file")
            yq -i "
              .updates[$i].package-ecosystem = \"docker\" |
              .updates[$i].directory = \"$dir\" |
              .updates[$i].schedule.interval = \"${{ inputs.schedule }}\"
            " ${{ inputs.output_file }}
            i=$((i + 1))
          done
          
          # npm
          for file in $(find . -type f -name "package.json"); do
            dir=$(dirname "$file")
            yq -i "
              .updates[$i].package-ecosystem = \"npm\" |
              .updates[$i].directory = \"$dir\" |
              .updates[$i].schedule.interval = \"${{ inputs.schedule }}\"
            " ${{ inputs.output_file }}
            i=$((i + 1))
          done
          
          # Golang
          for file in $(find . -type f -name "go.mod"); do
            dir=$(dirname "$file")
            yq -i "
              .updates[$i].package-ecosystem = \"gomod\" |
              .updates[$i].directory = \"$dir\" |
              .updates[$i].schedule.interval = \"${{ inputs.schedule }}\"
            " ${{ inputs.output_file }}
            i=$((i + 1))
          done

      - name: "‚è´ Create a Pull Request"
        uses: peter-evans/create-pull-request@v6
        with:
          add-paths: ${{ inputs.output_file }}
          commit-message: "chore: update dependabot config"
          base: ${{ inputs.base_branch }}
          branch: "chore/update-dependabot-config"
          delete-branch: true
          title: "chore: update dependabot config"
          body: "This pull request has been generated by a GitHub workflow to refresh the dependabot configuration file, utilizing the detected files within the repository."
