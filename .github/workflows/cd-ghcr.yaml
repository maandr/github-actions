name: CD (Docker Build & Push to GitHub Container Registry)
on:
  workflow_call:
    inputs:
      dockerImage:
        type: string
        description: "The name of the Docker image to build (e.g. ghcr.io/username/repository)"
        required: true
      dockerTags:
        type: string
        description: "The tags to apply to the Docker image (e.g. latest,1.0.0)"
        required: true
      dockerLabels:
        type: string
        description: "The labels to apply to the Docker image"
        required: false
        default: ""
      dockerFile:
        type: string
        description: "Path to the Dockerfile to build (e.g. ./Dockerfile)"
        required: false
        default: "./Dockerfile"
      dockerContext:
        type: string
        description: "Path of the Docker build context (e.g. ./)"
        required: false
        default: "./"

    secrets:
      CONTAINER_REGISTRY_PAT:
        description: "Personal Access Token for GitHub Container Registry"
        required: true

jobs:
  build-and-push-to-ghcr:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout Git Repository
        id: checkout-git-repository
        uses: actions/checkout@v3.3.0

      - name: ‚öôÔ∏è Setup QEMU
        id: setup-qemu
        uses: docker/setup-qemu-action@v2.1.0

      - name: ‚öôÔ∏è Setup Docker Buildx
        id: setup-buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: üîê Login to GitHub Container Registry
        id: ghcr-login
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_PAT }}

      - name: üèóÔ∏è Build and publish
        id: docker-build-and-push
        uses: docker/build-push-action@v3.3.0
        with:
          push: true
          context: ${{ inputs.dockerContext }}
          file: ${{ inputs.dockerFile }}
          tags: ${{ inputs.docketTags }}
          labels: ${{ inputs.dockerLabels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
