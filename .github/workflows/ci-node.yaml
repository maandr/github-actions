name: CI (Node)
on:
  workflow_call:
    inputs:
      node_version:
        type: string
        description: "The Node version to use (e.g. 18.x)"
        required: true
      lint_command:
        type: string
        description: "The command to run to lint the source code (e.g. pnpm lint)"
        required: false
        default: "pnpm lint"
      test_command:
        type: string
        description: "The command to run to test the source code (e.g. pnpm test)"
        required: false
        default: "pnpm test"
      build_command:
        type: string
        description: "The command to build the source code (e.g. pnpm build)"
        required: false
        default: "pnpm build"
      working_dir:
        type: string
        description: "The working directory to use (e.g. ./app)"
        required: false
        default: "./"
      timeout_minutes:
        type: string
        description: "Duration the workflow is allowed to run"
        required: false
        default: "10"

jobs:
  ci-node:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(inputs.timeout_minutes) }}
    defaults:
      run:
        working-directory: ${{ inputs.working_dir }}
    steps:
      - name: "⏬ Checkout Git Repository"
        uses: actions/checkout@v4

      - name: "⚙ Install pnpm"
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 8

      - name: "⚙️ Setup Node ${{ inputs.node_version }}"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: 'pnpm'
          cache-dependency-path: ${{ inputs.working_dir }}/pnpm-lock.yaml

      - name: "📦 Install Dependencies"
        run: pnpm install --no-frozen-lockfile

      - name: "🏗️ Build Application"
        if: always()
        run: ${{ inputs.build_command }}

      - name: "🕵️ Lint Source Code"
        if: always()
        run: ${{ inputs.lint_command }}

      - name: "🧪 Tests Application"
        if: always()
        run: ${{ inputs.test_command }}
